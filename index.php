<?php
header("Content-type: text/html; charset=utf-8;");


// ---  Подключение
include 'sys/Ractor.php';

// ---  Установка параметров
// Установка корня приложения. Обязательно если файл Ractor.php находиться в подкаталоге.
$param['path'] = __DIR__;
// Пользовательская страница 404. Параметр URL роутер. Не обезательно.
$param['page404'] = 'not-found';

$Re = new Ractor($param);


// Назначый роутер в параметре на страницу 404
$Re->re('/not-found', function() {
    require('inc/404.php');
});


$Re->re('/', function() {
    echo "Main page, generate class Ractor";
});


$Re->re('/hello', function() {
    echo "Hello World";
});


$Re->re('/page/.+', function($article) use ($Re) {
    echo "Page: ". $article;
    echo "<p><a href='".$Re->url."/page/blog'>Blog</a> | <a href='".$Re->url."/page/articles'>Articles</a> | <a href='".$Re->url."/page/contacts'>Contacts</a></p>";
});


$Re->re('/blog/.+/.+', function($a, $b)  {

    echo "Your <strong>Blog</strong>: ". $a. ' / ' .$b;

});


/*  **************************************************************************************


    ПАРАМЕТРЫ: ----------------------------------------
    
$param['path'] = __DIR__;
    Установка корня приложения. Обязательно если файл Rerec.php находиться в подкаталоге. 

$param['page404massage'] = 'сообщения для страниц 404';
    Сообщения для виртуальной страницы 404. Строка может быть сложной, с HTML кодом. Параметр используеться если не указан параметр "page404". Не обезательно.

$param['page404'] = 'not-found';
    Пользовательская страница 404. Параметр URL роутер. Не обезательно.

$param['domin'] = "www.my-sitw.com";
    Если сервер настроен не правельно можнт возникнуть проблемы с некоторыми методами класса. 
    В такому случаи нужно задать доменное имя. Не обезательно.

$param['flashKey'] = '_mykey';
    Ключ для сессий при методе flash. Не обезательно.

    

    СВОЙСТВА: -----------------------------------------
urlHost 
    содержит имя домена
    
url
    содержить URL приложения
    
pathRoot
    содержить абсолютный путь к директории
    
    
    МЕТОДЫ: -------------------------------------------
re()
    Роутер, основной инструмен класса, осуществляет переходы по URL с загрузкой определенных функций
    Пример:

getInstance()
    Статический метод доступу к классу.
    
run()
    Запуск класса, метод должен быть вызван в конце скрипта. Обезательно.
    
path($domin = null)
    Принимает домен. только для внутренего использования.
    
thisUrl()
    Возвращает текущий URL адрес
    
redirect($url = null, $code = 302, $delay = 0)
    Делает редирект. Работает только через заголовки.
        $url    - примисает отностиельный от корня приложения адрес запроса. 
        $code   - код заголовка
        $delay  - рефреш с задержкой. принимает int в секундах
        
    Пример:
        $Re->redirect("/admin/login");
    
error($code = null, $callback = null)
    Устанавлевает выполнение функции для кода заголовка ошибки
    Пример:
        function error405($masseg = null){
            echo " call anyone " . $masseg;
        }
        $Re->error("400", "error405");
        
        $Re->halt(400, 'Ошибка видна только в созданых функциях обработки');

    
halt($code = null, $message = null)
    Останавлевает текущий запрос. Сожет принимать код ошибки, который затем обрабатываеться, как на примере выше, и сообщение.
    
http_status($code = null)
    Возвращает статус HTTP заголовка поп его коду. Для внутренего использования.
    
apply($callable, $args = array())
    Вызов функции с аргументами в массиве. Для внутренего использования и не только.

call($callable, $arg = null)
    Вызов функции с аргументами. Для внутренего использования и не только.

add_action($event = null, $callback = null)
    Хук. Возвращает или задает обработчиков событий. Два аргумента $event имя события должно быть уже зарегестирировано методом exec_action()
    и $callback функция для обработки, которая вызываеться в месте устанвки метода exec_action() с одноименным аргументом.
    Возвращает NULL для незарегистированых имен.
    Пример:
        $route->add_action("action_name", "my_foo");

exec_action($event)
    Хук. Назначения и установка позиции выполнения обработчиков событий.
    Пример:
        $route->exec_action("action_name");
        function my_foo(){
            echo " my_foo ! ";
        }

before($callback)
    Регистрация функции для обратного вызова. Обрабатываеться событие до роутинга.
    Пример:
        $route->before("action_foo_before");
        function action_foo_before(){
            echo "<h1>action_foo_before</h1>";
        }


after($callback)
    Регистрация функции для обратного вызова. Обрабатываеться событие после роутинга.
    Пример:
        $route->after("action_foo_after");
        function action_foo_after(){
            echo "<h1>action_foo_after</h1>";
        }

flash($key = null, $value = null, $keep = true)




**************************************************************************************   */


$Re->run();